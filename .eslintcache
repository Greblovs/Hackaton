[{"C:\\Users\\Sgreb\\Desktop\\web\\hackaton\\front\\src\\index.js":"1","C:\\Users\\Sgreb\\Desktop\\web\\hackaton\\front\\src\\reportWebVitals.js":"2","C:\\Users\\Sgreb\\Desktop\\web\\hackaton\\front\\src\\App.js":"3","C:\\Users\\Sgreb\\Desktop\\web\\hackaton\\front\\src\\Components\\Home\\home.js":"4","C:\\Users\\Sgreb\\Desktop\\web\\hackaton\\front\\src\\Components\\graph\\graph.js":"5"},{"size":518,"mtime":1611692565970,"results":"6","hashOfConfig":"7"},{"size":362,"mtime":1608356763567,"results":"8","hashOfConfig":"7"},{"size":155,"mtime":1611625060290,"results":"9","hashOfConfig":"7"},{"size":9530,"mtime":1611704370286,"results":"10","hashOfConfig":"7"},{"size":2285,"mtime":1611858403348,"results":"11","hashOfConfig":"7"},{"filePath":"12","messages":"13","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"14"},"10a24bt",{"filePath":"15","messages":"16","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"14"},{"filePath":"17","messages":"18","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"14"},{"filePath":"19","messages":"20","errorCount":0,"warningCount":9,"fixableErrorCount":0,"fixableWarningCount":0,"source":"21","usedDeprecatedRules":"14"},{"filePath":"22","messages":"23","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},"C:\\Users\\Sgreb\\Desktop\\web\\hackaton\\front\\src\\index.js",[],["24","25"],"C:\\Users\\Sgreb\\Desktop\\web\\hackaton\\front\\src\\reportWebVitals.js",[],"C:\\Users\\Sgreb\\Desktop\\web\\hackaton\\front\\src\\App.js",[],"C:\\Users\\Sgreb\\Desktop\\web\\hackaton\\front\\src\\Components\\Home\\home.js",["26","27","28","29","30","31","32","33","34"],"import React from 'react';\r\nimport classes from \"./home.module.scss\"\r\nimport {useState} from 'react';\r\nimport {faBars} from '@fortawesome/free-solid-svg-icons'\r\nimport {faTimes} from '@fortawesome/free-solid-svg-icons'\r\nimport {faChartLine} from '@fortawesome/free-solid-svg-icons'\r\nimport {faSearch} from '@fortawesome/free-solid-svg-icons'\r\nimport {faSync} from \"@fortawesome/free-solid-svg-icons\"\r\nimport {FontAwesomeIcon} from \"@fortawesome/react-fontawesome\";\r\nimport GraphElement from \"../graph/graph\"\r\nimport axios from \"axios\";\r\n\r\nconst searchLine = \"https://grecha-back.herokuapp.com/products/search?\"\r\nconst searchWheat = \"https://grecha-back.herokuapp.com/buckwheat/search\"\r\nconst getCategories = \"https://grecha-back.herokuapp.com/categories/main?page=0&pageSize=8\"\r\n\r\nconst Home = () => {\r\n    const [state, setState] = useState({\r\n        menuStatus: 0,                  //0 - closed, 1 - opened\r\n        graphStatus: 0,                 //0 - closed, 1 - opened\r\n        input: null,\r\n        searchRes: null,\r\n        categories: null,\r\n        page: 0,\r\n        items: [],\r\n        added:0,\r\n        but: 0,\r\n        start: 0\r\n    })\r\n\r\n    const getGrecha = ()=>{\r\n        state.start = 1\r\n\r\n        axios.get(searchWheat).then(result => {\r\n            setState(prev => {\r\n                return {\r\n                    ...prev,\r\n                    searchRes: result,\r\n                    page: 0,\r\n                    but: 1,\r\n                    added: 0,\r\n                    items:[]\r\n                }\r\n            })\r\n        })\r\n    }\r\n    if (state.start == 0) {\r\n        getGrecha()\r\n    }\r\n\r\n\r\n    const openMenu = () => {\r\n\r\n        setState(prev => {\r\n            return {\r\n                ...prev,\r\n                menuStatus: !prev.menuStatus\r\n            }\r\n        })\r\n    }\r\n\r\n    const openGraph = () => {\r\n        setState(prev => {\r\n            return {\r\n                ...prev,\r\n                graphStatus: !prev.graphStatus\r\n            }\r\n        })\r\n    }\r\n\r\n    let menuClass = null;\r\n    if (state.menuStatus == 0) {\r\n        menuClass = classes.sideMenuClosed\r\n    } else {\r\n        menuClass = classes.sideMenuOpen\r\n    }\r\n\r\n    let graphClass = null\r\n    if (state.graphStatus == 0) {\r\n        graphClass = classes.graphHolderClosed\r\n    } else {\r\n        graphClass = classes.graphHolderOpened\r\n    }\r\n    const updateString = (event) => {\r\n        setState(prev => {\r\n            return {\r\n                ...prev,\r\n                input: event.target.value\r\n            }\r\n        })\r\n\r\n    }\r\n\r\n    if (state.categories == null) {\r\n        axios.get(getCategories).then(result => {\r\n            setState(prev => {\r\n                return {\r\n                    ...prev,\r\n                    categories: result\r\n                }\r\n            })\r\n        })\r\n    }\r\n\r\n\r\n    const search = (e) => {\r\n\r\n        e.preventDefault()\r\n        let searchLineReq = searchLine + \"page=0&pageSize=12&search=\" + state.input\r\n        axios.get(searchLineReq).then(result => {\r\n            setState(prev => {\r\n                return {\r\n                    ...prev,\r\n                    searchRes: result,\r\n                    page: 0,\r\n                    added: 0,\r\n                    items: [],\r\n                    but: 0\r\n                }\r\n            })\r\n        })\r\n    }\r\n\r\n\r\n    const loadMore = (e) => {\r\n        let num = state.page + 1;\r\n        let searchLineReqQ = searchLine + \"page=\" + num + \"&pageSize=12&search=\" + state.input\r\n        axios.get(searchLineReqQ).then(result => {\r\n            setState(prev => {\r\n                return {\r\n                    ...prev,\r\n                    searchRes: result,\r\n                    page: num,\r\n                    added: 0,\r\n                    but:0\r\n                }\r\n            })\r\n        })\r\n    }\r\n\r\n    let cat = null\r\n    if (state.categories != null) {\r\n        cat = []\r\n        for (let i in state.categories.data[\"objects\"]) {\r\n            let e = state.categories.data.objects[i];\r\n\r\n            cat.push(e.title)\r\n        }\r\n    }\r\n\r\n    let catList = null;\r\n    if (cat != null) {\r\n        catList = [];\r\n        catList = cat.map((element, index) => {\r\n            return (\r\n                <p className={classes.menuButton}>{element}</p>\r\n            )\r\n        })\r\n    }\r\n\r\n\r\n    if (state.searchRes != null && state.added == 0) {\r\n        if (state.but == 0) {\r\n            for (let i in state.searchRes.data[\"objects\"]) {\r\n\r\n                let e = state.searchRes.data.objects[i];\r\n                let firstPrice = null;\r\n                for (let key in e.prices) {\r\n                    firstPrice = key;\r\n                    break;\r\n                }\r\n                state.items.push({\r\n                    img: e.img[\"s350x350\"],\r\n                    price: e.price,\r\n                    reseller: e.shop,\r\n                    title: e.title,\r\n                    url: e.web_url,\r\n                    weight: e.weight,\r\n                    unit: e.unit,\r\n                    producer: e.producer\r\n                })\r\n                state.added = 1;\r\n            }\r\n        }else{\r\n            for (let i in state.searchRes.data) {\r\n\r\n                console.log(\"--------\")\r\n                let e =state.searchRes.data[i]\r\n                state.items.push({\r\n                    img: e.img_url,\r\n                    price: e.price,\r\n                    reseller: e.shop,\r\n                    title: e.title,\r\n                    url: e.web_url,\r\n                    weight: 800,\r\n                    unit: e.unit,\r\n                    producer: 1\r\n                })\r\n                state.added = 1;\r\n            }\r\n        }\r\n    }\r\n\r\n    let carts = <p>Ищу в базе данных</p>\r\n\r\n    if (state.items != null) {\r\n        carts = []\r\n        console.log(state.items)\r\n        carts = state.items.map((element, index) => {\r\n            return (\r\n                <div className={classes.lot}>\r\n                    <img className={classes.img} src={element.img}/>\r\n                    <div className={classes.info}>\r\n                        <p className={classes.title}>{element.title}</p>\r\n                        <div className={classes.textBlock}>\r\n                            <p className={classes.reseller}>{element.reseller}</p>\r\n                            <p className={classes.price}>Ціна: {element.price / 100} грн</p>\r\n                            <p className={classes.weight}>Вага: {element.weight}</p>\r\n                        </div>\r\n                        <a href={element.url} className={classes.follow}>Купить</a>\r\n                    </div>\r\n\r\n                </div>\r\n            )\r\n        })\r\n\r\n\r\n\r\n    }\r\n\r\n    let loadB = null\r\n    if (carts.length == 0){\r\n         carts = <h1>Ищу гречку в базе данных</h1>\r\n    }else{\r\n        if (state.but == 0){\r\n            loadB = (\r\n                <div className={classes.loadMoreWrapper}>\r\n                    <div onClick={loadMore} className={classes.loadMore}>\r\n                        <FontAwesomeIcon className={classes.chartLine} icon={faSync} size=\"3x\"/>\r\n                    </div>\r\n                </div>\r\n            )\r\n            }\r\n    }\r\n\r\n    return (\r\n        <>\r\n            <div className={graphClass}>\r\n                <div className={classes.exitGraph} onClick={openGraph}>\r\n                    <FontAwesomeIcon className={classes.cross} icon={faTimes} size=\"4x\"/>\r\n                </div>\r\n                <GraphElement className={classes.graphImage} GraphElement/>\r\n            </div>\r\n            <div className={classes.wrapper}>\r\n                <div className={menuClass}>\r\n                    <div className={classes.closeMenu} onClick={openMenu}>\r\n                        <FontAwesomeIcon className={classes.cross} icon={faTimes} size=\"3x\"/>\r\n                    </div>\r\n                    <div className={classes.menuName}>Меню</div>\r\n                    <div className={classes.categories}>\r\n\r\n                        <div onClick={getGrecha} className={classes.searchGrecha}>Посмотреть Гречу</div>\r\n                        {catList}\r\n\r\n\r\n                    </div>\r\n\r\n                </div>\r\n                <div className={classes.menu}>\r\n                    <div className={classes.openMenu} onClick={openMenu}>\r\n                        <FontAwesomeIcon className={classes.bars} icon={faBars} size=\"3x\"/>\r\n                    </div>\r\n                    <div className={classes.inputWrapper}>\r\n                        <form onSubmit={search}>\r\n                            <input type={\"text\"} name={\"search\"} onChange={updateString}\r\n                                   className={classes.searchField}>\r\n\r\n                            </input>\r\n\r\n                            <div onClick={search} type={\"submit\"} className={classes.searchButton}>\r\n                                <FontAwesomeIcon className={classes.search} icon={faSearch} size=\"lg\"/>\r\n                            </div>\r\n\r\n                        </form>\r\n                    </div>\r\n                </div>\r\n                <div className={classes.chart} onClick={openGraph}>\r\n                    <FontAwesomeIcon className={classes.chartLine} icon={faChartLine} size=\"3x\"/>\r\n                </div>\r\n\r\n\r\n                <div className={classes.mainFrame}>\r\n                    <>\r\n                        {carts}\r\n                    </>\r\n\r\n                        {loadB}\r\n\r\n                </div>\r\n\r\n            </div>\r\n\r\n        </>\r\n    )\r\n}\r\n\r\nexport default Home;","C:\\Users\\Sgreb\\Desktop\\web\\hackaton\\front\\src\\Components\\graph\\graph.js",["35","36","37"],{"ruleId":"38","replacedBy":"39"},{"ruleId":"40","replacedBy":"41"},{"ruleId":"42","severity":1,"message":"43","line":47,"column":21,"nodeType":"44","messageId":"45","endLine":47,"endColumn":23},{"ruleId":"42","severity":1,"message":"43","line":72,"column":26,"nodeType":"44","messageId":"45","endLine":72,"endColumn":28},{"ruleId":"42","severity":1,"message":"43","line":79,"column":27,"nodeType":"44","messageId":"45","endLine":79,"endColumn":29},{"ruleId":"42","severity":1,"message":"43","line":162,"column":48,"nodeType":"44","messageId":"45","endLine":162,"endColumn":50},{"ruleId":"42","severity":1,"message":"43","line":163,"column":23,"nodeType":"44","messageId":"45","endLine":163,"endColumn":25},{"ruleId":"46","severity":1,"message":"47","line":169,"column":21,"nodeType":"48","messageId":"49","endLine":169,"endColumn":31},{"ruleId":"50","severity":1,"message":"51","line":212,"column":21,"nodeType":"52","endLine":212,"endColumn":69},{"ruleId":"42","severity":1,"message":"43","line":232,"column":22,"nodeType":"44","messageId":"45","endLine":232,"endColumn":24},{"ruleId":"42","severity":1,"message":"43","line":235,"column":23,"nodeType":"44","messageId":"45","endLine":235,"endColumn":25},{"ruleId":"46","severity":1,"message":"53","line":2,"column":8,"nodeType":"48","messageId":"49","endLine":2,"endColumn":15},{"ruleId":"42","severity":1,"message":"43","line":24,"column":26,"nodeType":"44","messageId":"45","endLine":24,"endColumn":28},{"ruleId":"42","severity":1,"message":"43","line":63,"column":26,"nodeType":"44","messageId":"45","endLine":63,"endColumn":28},"no-native-reassign",["54"],"no-negated-in-lhs",["55"],"eqeqeq","Expected '===' and instead saw '=='.","BinaryExpression","unexpected","no-unused-vars","'firstPrice' is assigned a value but never used.","Identifier","unusedVar","jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","JSXOpeningElement","'classes' is defined but never used.","no-global-assign","no-unsafe-negation"]