[{"C:\\Users\\Sgreb\\Desktop\\web\\hackaton\\front\\src\\index.js":"1","C:\\Users\\Sgreb\\Desktop\\web\\hackaton\\front\\src\\reportWebVitals.js":"2","C:\\Users\\Sgreb\\Desktop\\web\\hackaton\\front\\src\\App.js":"3","C:\\Users\\Sgreb\\Desktop\\web\\hackaton\\front\\src\\Components\\Home\\home.js":"4","C:\\Users\\Sgreb\\Desktop\\web\\hackaton\\front\\src\\Components\\graph\\graph.js":"5"},{"size":518,"mtime":1611692565970,"results":"6","hashOfConfig":"7"},{"size":362,"mtime":1608356763567,"results":"8","hashOfConfig":"7"},{"size":155,"mtime":1611625060290,"results":"9","hashOfConfig":"7"},{"size":6914,"mtime":1611692565982,"results":"10","hashOfConfig":"7"},{"size":2296,"mtime":1611663714511,"results":"11","hashOfConfig":"7"},{"filePath":"12","messages":"13","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"10a24bt",{"filePath":"14","messages":"15","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"16"},{"filePath":"17","messages":"18","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"16"},{"filePath":"19","messages":"20","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"21"},{"filePath":"22","messages":"23","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"24","usedDeprecatedRules":"16"},"C:\\Users\\Sgreb\\Desktop\\web\\hackaton\\front\\src\\index.js",[],"C:\\Users\\Sgreb\\Desktop\\web\\hackaton\\front\\src\\reportWebVitals.js",[],["25","26"],"C:\\Users\\Sgreb\\Desktop\\web\\hackaton\\front\\src\\App.js",[],"C:\\Users\\Sgreb\\Desktop\\web\\hackaton\\front\\src\\Components\\Home\\home.js",["27","28","29"],"import React from 'react';\r\nimport classes from \"./home.module.scss\"\r\nimport {useState} from 'react';\r\nimport { faBars } from '@fortawesome/free-solid-svg-icons'\r\nimport { faTimes } from '@fortawesome/free-solid-svg-icons'\r\nimport { faChartLine } from '@fortawesome/free-solid-svg-icons'\r\nimport { faSearch } from '@fortawesome/free-solid-svg-icons'\r\nimport {FontAwesomeIcon} from \"@fortawesome/react-fontawesome\";\r\nimport GraphElement from  \"../graph/graph\"\r\nimport axios from \"axios\";\r\n\r\nconst searchLine = \"https://buckwheat-price-seeker.herokuapp.com/products/search?\"\r\nconst getCategories = \"https://buckwheat-price-seeker.herokuapp.com/categories/main?page=0&pageSize=8\"\r\n\r\nconst Home = () =>{\r\n    const [state, setState] = useState({\r\n        menuStatus: 0,                  //0 - closed, 1 - opened\r\n        graphStatus: 0,                 //0 - closed, 1 - opened\r\n        input: null,\r\n        searchRes: null,\r\n        categories: null\r\n    })\r\n\r\n\r\n    const openMenu = () =>{\r\n\r\n        setState(prev=>{\r\n            return {\r\n                ...prev,\r\n                menuStatus: !prev.menuStatus\r\n            }\r\n        })\r\n    }\r\n\r\n    const openGraph = () => {\r\n        setState( prev => {\r\n            return{\r\n                ...prev,\r\n                graphStatus: !prev.graphStatus\r\n            }\r\n        })\r\n    }\r\n\r\n    let menuClass = null;\r\n    if (state.menuStatus == 0){\r\n        menuClass = classes.sideMenuClosed\r\n    }else{\r\n        menuClass = classes.sideMenuOpen\r\n    }\r\n\r\n    let graphClass = null\r\n    if (state.graphStatus == 0){\r\n        graphClass = classes.graphHolderClosed\r\n    }else{\r\n        graphClass = classes.graphHolderOpened\r\n    }\r\n    const updateString = (event) =>{\r\n        setState( prev => {\r\n            return{\r\n                ...prev,\r\n                input: event.target.value\r\n            }\r\n        })\r\n\r\n    }\r\n\r\n    if (state.categories == null) {\r\n        axios.get(getCategories).then(result => {\r\n            setState(prev => {\r\n                return {\r\n                    ...prev,\r\n                    categories: result\r\n                }\r\n            })\r\n        })\r\n    }\r\n\r\n\r\n\r\n    const search = (e) =>{\r\n        e.preventDefault()\r\n        let searchLineReq = searchLine + \"page=1&pageSize=12&search=\" + state.input\r\n        axios.get(searchLineReq).then(result => {\r\n            setState( prev => {\r\n                return{\r\n                    ...prev,\r\n                    searchRes: result\r\n                }\r\n            })\r\n        })\r\n    }\r\n    console.log(state.searchRes)\r\n\r\n    let cat = null\r\n    if (state.categories != null){\r\n        cat = []\r\n        for (let i in state.categories.data[\"objects\"]){\r\n            let e = state.categories.data.objects[i];\r\n            console.log(e)\r\n            cat.push(e.title)\r\n        }\r\n    }\r\n\r\n    let catList = null;\r\n    if (cat != null) {\r\n        catList = [];\r\n        catList = cat.map((element, index)=>{\r\n            return(\r\n                <p className={classes.menuButton}>{element}</p>\r\n            )\r\n        })\r\n    }\r\n\r\n\r\n    let items = null\r\n    if (state.searchRes != null) {\r\n        items = []\r\n\r\n        for (let i in state.searchRes.data[\"objects\"]) {\r\n            let e = state.searchRes.data.objects[i];\r\n            let firstPrice = null;\r\n            for (let key in e.prices){\r\n                firstPrice = key;\r\n                break;\r\n            }\r\n            items.push({\r\n                img: e.img[\"s350x350\"],\r\n                price: e.prices[firstPrice],\r\n                reseller: firstPrice,\r\n                title: e.title,\r\n                url: e.web_url,\r\n                weight: e.weight,\r\n                unit: e.unit,\r\n                producer: e.producer\r\n            })\r\n\r\n        }\r\n        console.log(items)\r\n    }\r\n\r\n    let carts = null\r\n    if (items != null) {\r\n        carts = [];\r\n        carts = items.map((element, index)=>{\r\n           return(\r\n               <div className={classes.lot}>\r\n                   <img className={classes.img} src={element.img}/>\r\n                   <div className={classes.info}>\r\n                       <p className={classes.title}>{element.title}</p>\r\n                       <div className={classes.textBlock}>\r\n                           <p className={classes.reseller}>{element.reseller}</p>\r\n                           <p className={classes.price}>Ціна: {element.price/100} грн</p>\r\n                           <p className={classes.weight}>Вага: {element.weight}</p>\r\n                       </div>\r\n                       <a href={element.url} className={classes.follow}>Купить</a>\r\n                   </div>\r\n\r\n               </div>\r\n           )\r\n        })\r\n\r\n    }\r\n\r\n\r\n    return(\r\n        <>\r\n            <div className={graphClass}>\r\n                <div className={classes.exitGraph} onClick={openGraph}>\r\n                    <FontAwesomeIcon className={classes.cross} icon={faTimes} size=\"4x\" />\r\n                </div>\r\n                <GraphElement className ={classes.graphImage} GraphElement/>\r\n            </div>\r\n            <div className={classes.wrapper}>\r\n                <div className={menuClass}>\r\n                    <div className={classes.closeMenu} onClick={openMenu}>\r\n                        <FontAwesomeIcon className={classes.cross} icon={faTimes} size=\"3x\" />\r\n                    </div>\r\n                    <div className={classes.menuName}>Меню</div>\r\n                    <div className={classes.categories}>\r\n\r\n                        <div className={classes.searchGrecha} >Посмотреть Гречу</div>\r\n                        {catList}\r\n\r\n\r\n                    </div>\r\n\r\n                </div>\r\n                <div className={classes.menu}>\r\n                    <div className={classes.openMenu} onClick={openMenu}>\r\n                        <FontAwesomeIcon className={classes.bars} icon={faBars} size=\"3x\" />\r\n                    </div>\r\n                    <div className={classes.inputWrapper}>\r\n                        <form onSubmit={search}>\r\n                            <input type={\"text\"} name={\"search\"} onChange={updateString} className={classes.searchField}>\r\n\r\n                            </input>\r\n                            <div onClick={search} type={\"submit\"} className={classes.searchButton}>\r\n                                <FontAwesomeIcon className={classes.search} icon={faSearch} size=\"lg\" />\r\n                            </div>\r\n\r\n                        </form>\r\n                    </div>\r\n                </div>\r\n                <div className={classes.chart} onClick={openGraph}>\r\n                    <FontAwesomeIcon className={classes.chartLine}  icon={faChartLine} size=\"3x\" />\r\n                </div>\r\n\r\n\r\n                <div className={classes.mainFrame}>\r\n\r\n                    {carts}\r\n\r\n                </div>\r\n\r\n            </div>\r\n\r\n        </>\r\n    )\r\n}\r\n\r\nexport default Home;","C:\\Users\\Sgreb\\Desktop\\web\\hackaton\\front\\src\\Components\\graph\\graph.js",["30","31","32"],"import React from 'react';\r\nimport classes from \"./graph.module.scss\"\r\nimport {useState} from 'react';\r\nimport axios from \"axios\";\r\nimport ReactFC from \"react-fusioncharts\";\r\nimport FusionCharts from \"fusioncharts\";\r\nimport Column2D from \"fusioncharts/fusioncharts.charts\";\r\nimport FusionTheme from \"fusioncharts/themes/fusioncharts.theme.fusion\";\r\n\r\nReactFC.fcRoot(FusionCharts, Column2D, FusionTheme);\r\nconst graphUrl = \"https://buckwheat-price-seeker.herokuapp.com/chart/buckwheat\"\r\n\r\n\r\n\r\n\r\n\r\n\r\nconst Graph = () =>{\r\n    const [state, setState] = useState({\r\n        chartData:  null,\r\n        dataLoaded: false\r\n    })\r\n\r\n    if (state.dataLoaded == false) {\r\n        let chartData = []\r\n        axios.get(graphUrl)\r\n            .then(result => {\r\n                for (let i in result.data[\"values\"]) {\r\n\r\n                    chartData.push({label: i, value: result.data.values[i]})\r\n                }\r\n                setState(prev => {\r\n                    return {\r\n                        ...prev,\r\n                        chartData: chartData,\r\n                        dataLoaded: true\r\n                    }\r\n                })\r\n            })\r\n    }\r\n\r\n    const chartConfigs = {\r\n        type: \"line\",\r\n        width: (window.innerWidth-100),\r\n        height: window.innerHeight,\r\n        dataFormat: \"json\",\r\n        dataSource: {\r\n\r\n            chart: {\r\n                caption: \"Prices\",\r\n                subCaption: \"On Buckwheat\",\r\n                xAxisName: \"Date\",\r\n                yAxisName: \"Price\",\r\n\r\n                theme: \"fusion\"\r\n            },\r\n\r\n            data: state.chartData\r\n        }\r\n    }\r\n\r\n\r\n    if (state.dataLoaded == false) {\r\n        return (\r\n            <>\r\n                <>\r\n                    <h2>Loading Your Data</h2>\r\n                </>\r\n            </>\r\n        )\r\n    }else{\r\n        return (\r\n            <>\r\n\r\n                <ReactFC  {...chartConfigs} />\r\n            </>\r\n        )\r\n    }\r\n}\r\n\r\nexport default Graph;",{"ruleId":"33","replacedBy":"34"},{"ruleId":"35","replacedBy":"36"},{"ruleId":"37","severity":1,"message":"38","line":45,"column":26,"nodeType":"39","messageId":"40","endLine":45,"endColumn":28},{"ruleId":"37","severity":1,"message":"38","line":52,"column":27,"nodeType":"39","messageId":"40","endLine":52,"endColumn":29},{"ruleId":"41","severity":1,"message":"42","line":148,"column":20,"nodeType":"43","endLine":148,"endColumn":68},{"ruleId":"44","severity":1,"message":"45","line":2,"column":8,"nodeType":"46","messageId":"47","endLine":2,"endColumn":15},{"ruleId":"37","severity":1,"message":"38","line":24,"column":26,"nodeType":"39","messageId":"40","endLine":24,"endColumn":28},{"ruleId":"37","severity":1,"message":"38","line":63,"column":26,"nodeType":"39","messageId":"40","endLine":63,"endColumn":28},"no-native-reassign",["48"],"no-negated-in-lhs",["49"],"eqeqeq","Expected '===' and instead saw '=='.","BinaryExpression","unexpected","jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","JSXOpeningElement","no-unused-vars","'classes' is defined but never used.","Identifier","unusedVar","no-global-assign","no-unsafe-negation"]